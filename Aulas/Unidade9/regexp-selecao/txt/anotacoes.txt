Regular Expression
Regexp ou Regex são expresões utilizadas para realizarmos buscas / substituições de padrões em strings. Os padrões devem ser colocados entre //. Geralmente vamos utilizá-las nos métodos .replace() e .split()

Literal
Utilizar um caracter literal irá realizar uma busca específica deste caracter.

Flag:g
As flags irão modificar como a expressão é interpretada. Umas das mais utilizadas é a g, que significa global, ou seja, retorne todos os resultados que estiverem dentro do padrão e não apenas o primeiro. A flag deve ser colocada no final da expressão

const regexp = /a/g

Flag:i
Com o i informamos que devem ser ignoradas as diferenças entre maiúsculas e minúsculas. Isso significa que /a/ irá buscar por a e A.

Character Class
Se colocarmos os caracteres entre colchetes, estamos definindo uma classe. /[ab]/ irá procurar por a ou por b.

Character Class e Especiais
Podemos utilizar caracteres que não são alfanuméricos dentro da classe. Mas fique atento, pois existem diversos casos especiais para os mesmos.

. significa tudo.
Use \ antes para selecionar realmente o . e não tudo.

Um ou outro
Combine caracteres literais com uma classe para buscarmos variações: Ju[nl]ho busca Julho ou Junho

De A à Z
O traço - dentro de [] pode servir para definirmos um alcance.
[A-Z] irá buscar os caracteres A à Z. [1-9] busca de 0 à 9. A tabela UNICODE é utilizada como referência para definirmos os caracteres dentro do alcance.
Conferir a ordem na tabela unicode, vai pegar na ordem dos caracteres da tabela

Negar
Utilizando o acento cincunflexo podemos negar caracteres. Ou seja, pegue tudo que não seja [^a]