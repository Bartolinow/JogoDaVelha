Destructuring
Permite a desestruturação de Arrays e Objetos. Atribuindo suas propriedades à novas variáveis.

Destructuring Objects
A desestruturação irá facilitar a manipulação de dados. Principalmente quando temos uma grande profundidae de objetos.

Nesting
É possível aninhar uma desestruturação dentro de outra.

Nome das variáveis
É necessário indicar o nome da propriedade que você deseja desestruturar de um objeto. É possífvel mudar o nome da variável final com:

const cliente = {
  nome: "Andre",
  compras: 10,
}

const {nome, compras} = cliente;
// ou
const {nome: nomeCliente, compras: comprasCliente} = cliente;

Valor Inicial
Caso a propriedade não exista o valor padrão dela será undefined. É possível modificar este valor no momento da desestruturação.

const {nome, compras, email = "email@gmail.com", cpf} = cliente;
console.log(email); // email@gmail.com
console.log(cpf); // undefined

Destructuring Arrays
Para desestruturar array's você deve colocar as variáveis entre [] colchetes.

const frutas = ["Banana","Uva","Morango"];

const primeiraFruta = frutas[0];
const segundaFruta = frutas[1];
const terceiraFruta = frutas[2];

Com Destructuring - const [primeira, segunda, terceira] = frutas;

Declaração de variáveis
A desestruturação pode servir para declararmos uma sequência de variáveis.

const primeiroItem = "Item 1";
const segundoItem = "Item 2";
const terceiroItem = "Item 3";
// ou
const [primeiro, segundo, terceiro] = ["Item 1","Item 2","Item 3"];

Argumento Desestruturado
Se uma função espera receber como argumetno um objeto, podemos desestruturas ele no momento da declaração.

function handleKeyboard(event){
  console.log(event.key);
}
// Com Destructuring
function handleKeyboard({key}){
  console.log(key)
}

document.addEventListener("keyup", handleKeyboard);